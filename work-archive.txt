
			
			/*DO-WHILE Loop
		 
		 Goofus and Gallant are both going swimming. 
		 They hate to swim in cold water; once the water temperature drops below 79°F, they stop.
Run the program, and type in 80.5 for the water temperature.
What is the current water temperature? 80.5
Okay, so the current water temperature is 80.5F.
GALLANT approaches the lake....
        GALLANT swims for a bit. Swim time: 1 min.
        The current water temperature is now 80.0F.
        GALLANT swims for a bit. Swim time: 2 min.
        The current water temperature is now 79.5F.
        GALLANT swims for a bit. Swim time: 3 min.
        The current water temperature is now 79.0F.
        GALLANT swims for a bit. Swim time: 4 min.
        The current water temperature is now 78.5F.
GALLANT stops swimming. Total swim time: 4 min.

Okay, so the current water temperature is 80.5F.
GOOFUS  approaches the lake....
        GOOFUS  swims for a bit. Swim time: 1 min.
        The current water temperature is now 80.0F.
        GOOFUS  swims for a bit. Swim time: 2 min.
        The current water temperature is now 79.5F.
        GOOFUS  swims for a bit. Swim time: 3 min.
        The current water temperature is now 79.0F.
        GOOFUS  swims for a bit. Swim time: 4 min.
        The current water temperature is now 78.5F.
GOOFUS  stops swimming. Total swim time: 4 min.
		 */
		
		Scanner keyboard = new Scanner(System.in);
		 String swimmer1 = "GALLANT";
	        String swimmer2 = "GOOFUS ";

	        double minimumTemperature = 79.0; // degrees Fahrenheit
	        double currentTemperature;
	        double savedTemperature;
	        int swimTime;

	        System.out.print("What is the current water temperature? ");
	        currentTemperature = keyboard.nextDouble();
	        savedTemperature = currentTemperature; // saves a copy of this value so we can get it back later.

	        System.out.println( "\nOkay, so the current water temperature is " + currentTemperature + "F." );
	        System.out.println( swimmer1 + " approaches the lake...." );

	        swimTime = 0;
	        while ( currentTemperature >= minimumTemperature )
	        {
	            System.out.print( "\t" + swimmer1 + " swims for a bit." );
	            swimTime++;
	            System.out.println( " Swim time: " + swimTime + " min." );
	            Thread.sleep(600); // pauses for 600 milliseconds
	            currentTemperature -= 0.5; // subtracts 1/2 a degree from the water temperature
	            System.out.println( "\tThe current water temperature is now " + currentTemperature + "F." );
	        }

	        System.out.println( swimmer1 + " stops swimming. Total swim time: " + swimTime + " min." );

	        currentTemperature = savedTemperature; // restores original water temperature

	        System.out.println( "\nOkay, so the current water temperature is " + currentTemperature + "F." );
	        System.out.println( swimmer2 + " approaches the lake...." );

	        swimTime = 0;
	        do
	        {
	            System.out.print( "\t" + swimmer2 + " swims for a bit." );
	            swimTime++;
	            System.out.println( " Swim time: " + swimTime + " min." );
	            Thread.sleep(600);
	            currentTemperature -= 0.5;
	            System.out.println( "\tThe current water temperature is now " + currentTemperature + "F." );

	        } while ( currentTemperature >= minimumTemperature );

	        System.out.println( swimmer2 + " stops swimming. Total swim time: " + swimTime + " min." );
           /* 1. both swim for the same amount of time
            * 2. when temperature = 78, s2 swims for 1 min
            */

            
            /*
		 * DO-WHILE Loop - Flip Again?
		 * 
		 * You flip a coin and it is... TAILS Would you like to flip again
		 * (y/n)? y You flip a coin and it is... HEADS Would you like to flip
		 * again (y/n)? y You flip a coin and it is... HEADS Would you like to
		 * flip again (y/n)? n
		 */

		Scanner keyboard = new Scanner(System.in);
		String y = "y";
		String n = "n";

		Random r = new Random();

		System.out.println("You flip a coin and it is... TAILS");
		System.out.println("Would you like to flip again (y/n)? ");

		String answer = keyboard.nextLine();

		do {

			System.out.println("Would you like to flip again (y/n)? ");
			answer = keyboard.nextLine();
			String coin;

			int flip = 1 + r.nextInt(2);

			if (flip == 1) {
				coin = "TAILS";
				
			
			} else  {
				coin = "HEADS";
			}
			while (answer.equals(y))
			System.out.println("You flip a coin and it is... " + coin);
			
			
			
			* HERE COME THE DICE!
		 * 
		 * Roll #1: 3 Roll #2: 5 The total is 8!
		 * 
		 * Roll #1: 6 Roll #2: 1 The total is 7!
		 * 
		 * Roll #1: 2 Roll #2: 5 The total is 7!
		 * 
		 * Roll #1: 1 Roll #2: 1 The total is 2!
		 */

		Scanner keyboard = new Scanner(System.in);

		Random r = new Random();

		System.out.println("HERE COME THE DICE!");

		int roll1;

		do {
			roll1 = 1 + r.nextInt(10);
			int roll2 = 1 + r.nextInt(10);

			System.out.println("Roll #1: " + roll1);
			System.out.println("Roll #2: " + roll2);
			
			int total = roll1 + roll2;
			
			System.out.println("The total is " + total + " !");

		} while (roll1 < 10);
		
		* Again with the Number-Guessing I have chosen a number between 1 and
		 * 10. Try to guess it. Your guess: 5 That is incorrect. Guess again.
		 * Your guess: 4 That is incorrect. Guess again. Your guess: 8 That is
		 * incorrect. Guess again. Your guess: 6 That's right! You're a good
		 * guesser. It only took you 4 tries.
		 */

		Scanner keyboard = new Scanner(System.in);

		Random r = new Random();

		System.out.println("I have chosen a number between 1 and 10.  Try to guess it.");

		int guess;
		int number = 5;
		guess = 1 + r.nextInt(10);
		

		do {
			guess = 1 + r.nextInt(10);
		
			System.out.println("Your guess: " + guess);
			System.out.println("That is incorrect.  Guess again.");

		} while (guess != number);
		
	
	
	System.out.println( "That's right!  You're a good guesser.");
	}
}

Safe Square Root 


 * SQUARE ROOT! Enter a number: -9 You can't take the square root of a
		 * negative number, silly. Try again: -10 You can't take the square root
		 * of a negative number, silly. Try again: 10 The square root of 10 is
		 * 3.1622776601683795.
		 * 
		 */
		int n;
		Scanner keyboard = new Scanner(System.in);
		System.out.println("Enter a number: ");
		n = keyboard.nextInt();
		while (n < 0) {

			System.out.println("You can't take the square root of a negative number, silly.");
			System.out.println("Try again:");
			n = keyboard.nextInt();
		}
		double sqrt = (double) Math.sqrt(n);
		System.out.println("The square root of " + n + " is: " + sqrt);
	}
	
	
		Enter three integers:
Side 1: 4
Side 2: 3
3 is smaller than 4.  Try again.
Side 2: -9
-9 is smaller than 4.  Try again.
Side 2: 5
Side 3: 1
1 is smaller than 5.  Try again.
Side 3: 5

Your three sides are 4 5 5
NO!  These sides do not make a right triangle!
 

RIGHT TRIANGLE 


Enter three integers:
Side 1: 6
Side 2: 8
Side 3: 10

Your three sides are 6 8 10
These sides *do* make a right triangle.  Yippy-skippy!
		 */
		int side1=0;
		int side2=0;
		int side3=0;
	
		Scanner keyboard = new Scanner(System.in);
		System.out.println("Enter three integers: ");
		
		System.out.println("Enter side 1: ");

		side1 = keyboard.nextInt();
		System.out.println("Enter side 2: ");
		side2 = keyboard.nextInt();
		
		
	while ((side2 < side1)) {
			System.out.println( side1 + " is bigger than " + side2);
			System.out.println("try again ");
			side2 = keyboard.nextInt();
	}
	System.out.println("Enter side 3: ");
	side3 = keyboard.nextInt();
			
			
			while ((side3 < side2)){
				System.out.println( side3 + " is smaller than " + side2);
				System.out.println("try again ");
				side3 = keyboard.nextInt();
				
			}
			

	if (side1*side1 + side2*side2 == side3*side3) {
	System.out.println("Your three sides are " + " " +side1 + " " + side2 + " "+ side3);
	System.out.println("These sides *do* make a right triangle.  Yippy-skippy!");

 } else 
	 System.out.println("Your three sides are " + side1 + side2 + side3);
	 System.out.println(  "These sides *do* NOT make a right triangle. " );
	 
	 Scanner keyboard = new Scanner(System.in);

		int n = 0;
		int counter = 0;
	
	
	 * Collatz Sequence
		 * 
		 * Take any natural number n.
		 * 
		 * If n is even, divide it by 2 to get n / 2. If n is odd, multiply it
		 * by 3 and add 1 to get 3n + 1. Repeat the process indefinitely. /
		 * 
		 * 
		 */
		 

		System.out.println("ENTER A NUMBER: ");

		n = keyboard.nextInt();
		int max=n;
		
		while (n !=1){
			
			
				 if (n%2==0){
					
					 n=n/2;
				 }
				 else n = 3*n+1;
						 
						 System.out.println("; # " + counter);
				System.out.println( "  " + n );
				counter ++;
				
				if (max<n){
					max=n;
				
			
		}
			
			}
		
		System.out.println("the largest value is: " + max);
		
		MITCHELL'S TINY ADVENTURE 2!
	
		
		while (room != 0) {

			if (room == 1) {

				System.out.println("You are in a creepy house!");

				System.out.println("Would you like to go upstairs or into the  kitchen?");
				String choice = keyboard.nextLine();

				if (choice.equals("upstairs")) {
					room = 3;
				} else if (choice.equals("kitchen")) {
					room = 2;

				} else if (choice.equals("downstairs")) {
					room = 4;
				} else
					System.out.println(choice + " was npot a valid option");

				if (room == 2) {
					System.out.println("There is a long countertop with dirty dishes everywhere.  ");
					System.out.println(" Off to one side there is, as you'd expect, a refrigerator.");
					System.out.println(" You may open the refrigerator or go back");
					choice = keyboard.nextLine();
					if (choice.equals("fridge")) {
						System.out.println("Inside the refrigerator you see food and stuff.  It looks pretty nasty.");
						System.out.println("Would you like to eat some of the food? (yes or no");
						choice = keyboard.nextLine();
						if (choice.equals("y")) {
							System.out.println("The food is slimy and foul, but you manage to choke it down. ");
							System.out
									.println("Your stomach starts jumping like a frog in hot water.  You feel faint. ");
							System.out.println(" Sliding to the  floor, the darkness closes in. ");
							System.out.println(" You have died. ");
							room = 0;

						} else if (choice.equals("n")) {
							room = 1;

						}

					} else if (choice.equals("back"))
						room = 1;

				}

				if (room == 3) {
					System.out.println(
							" Upstairs you see a hallway.  " + "At the end of the hallway is the master bedroom.  "
									+ "There is also a bathroom off the hallway.  Or, you can "
									+ "go back downstairs. Where would you like to go?");

					choice = keyboard.nextLine();
					if (choice.equals("downstairs")) {
						room = 4;
					} else if (choice.equals("bathroom")) {
						room = 1;

					}

				}

			}

		}
	}

}


BABY NIM

int pile = 1;
		int choice1 = 0;

		int choice2 = 0;
		int choice3 = 0;

		while (pile > 0) {
			System.out.println("Choose a pile:");
			String choice = keyboard.nextLine();

			if (pile == 1) {

				if (choice.equals("A")) {
					pile = 2;
				} else if (choice.equals("B")) {
					pile = 3;

				} else if (choice.equals("C")) {
					pile = 4;
				}

				if (pile == 2) {
					System.out.println("How many to remove from pile A:");
					choice1 = keyboard.nextInt();

					System.out.println("A:" + (3 - choice1) + " B: " + (3 - choice2) + "C:" + (3 - choice3));
					pile = 1;

				}

				if (pile == 3) {
					System.out.println("How many to remove from pile B:");

					choice2 = keyboard.nextInt();
					System.out.println("A:" + (3 - choice1) + " B: " + (3 - choice2) + "C:" + (3 - choice3));
					pile = 1;

				}
				if (pile == 4) {
					System.out.println("How many to remove from pile c:");
					choice3 = keyboard.nextInt();
					System.out.println("A:" + (3 - choice1) + " B: " + (3 - choice2) + "C:" + (3 - choice3));
					pile = 1;
				}
			}if (pile <= 0) {
				System.out.println(" All piles are empty. Good job!");
				
				
				BABY NIM - CORRECT
				
				Scanner keyboard = new Scanner(System.in);
		int pileA = 3;
        int pileB = 3;
        int pileC = 3;
        //keep playing until none left
        while(pileA>0 || pileB > 0 || pileC >0) {
            System.out.print("A: "+pileA+ "     B: " + pileB + "     C: " + pileC);
            System.out.print("\r\nChoose a pile: ");
            String choice = keyboard.nextLine();
            System.out.print("\r\nHow many to remove from pile " + choice + ": ");
            int removal = keyboard.nextInt();
            keyboard.nextLine();
            if (choice.equals("A")) {
                pileA = pileA - removal;
            } else if (choice.equals("B")) {
                pileB = pileB - removal;
            } else if (choice.equals("C")) {
                pileC = pileC - removal;
            }
            if(pileA<=0 && pileB <= 0 && pileC <= 0) {
                System.out.print("All piles are empty. Good job!");
                
               BABY NIM - 2
               
                int pileA = 3;
		int pileB = 3;
		int pileC = 3;

		int choice = 0;

		while (pileA > 0 || pileB > 0 || pileC > 0) {

			System.out.println("A: " + pileA + "     B: " + pileB + "     C: " + pileC);

			System.out.println("Choose a pile:");

			String pile = keyboard.nextLine();
			System.out.println("How many to remove from pile: " + pile);

			choice = keyboard.nextInt();

			if (pile.equals("A")) {
				pileA = pileA - choice;

			} else if (pile.equals("B")) {
				pileB = pileB - choice;

			} else if (pile.equals("C")) {
				pileC = pileC - choice;
			}

		}
		if (pileA <= 0 && pileB <= 0 && pileC <= 0) {
			System.out.println(" All piles are empty. Good job!");
			
			/*
		 * BABY NIM 63 B
		 * 
		 */
		Scanner keyboard = new Scanner(System.in);

		int pileA = 3;
        int pileB = 3;
        int pileC = 3;
        
      
       
        	System.out.println(" Player 1, enter your name: ");
        	String player1 = keyboard.nextLine();
        	System.out.println(" Player 2, enter your name: " );
        	String player2 = keyboard.nextLine();
        	 
        	while(pileA > 0 || pileB > 0 || pileC > 0) {
        	
        	System.out.println("A: "+ pileA + "     B: " + pileB + "     C: " + pileC);
            
        	System.out.println( player1 + " Choose a pile: ");
            String pile = keyboard.nextLine();
            System.out.print("How many to remove from pile " + pile + ": ");
            int choice = keyboard.nextInt();
            keyboard.nextLine();
            
            System.out.println( player2 + " Choose a pile: ");
            String pile1 = keyboard.nextLine();
            System.out.print("How many to remove from pile " + pile1 + ": ");
            int choice2 = keyboard.nextInt();
            keyboard.nextLine();
            
            if (pile1.equals("A") || pile.equals("A")) {
                pileA = pileA - choice;
                pileA = pileA - choice2;
            } else if (pile1.equals("B")|| pile.equals("B")) {
                pileB = pileB - choice;
                pileB = pileB - choice2;
            } else if (pile1.equals("C")|| pile.equals("C")) {
                pileC = pileC - choice;
                pileC = pileC - choice2;
            }
            if(pileA <= 0 || pileB <= 0 || pileC <= 0) {
                System.out.print("All piles are empty. Good job!");
                System.out.println(player1 + " you are the winner");
		}

	}
}
}

FOR LOOPS

FizzBuzz

 for ( int n = 1 ; n <= 100 ; n = n + 1 )
    {
    	if (n%3 == 0){
    		System.out.println( n + " Fizz" );
    	} else if (n%5 == 0){
    		System.out.println( n + " FizzBuzz");
    		
    	} else
    	System.out.println(n );
    	
    	LETTER AT A TIME
    	
    	package make1;

import java.util.Scanner;

public class test {

	public static void main(String[] args) {
Scanner keyboard = new Scanner(System.in);



System.out.println("What is your message?");

String message = keyboard.nextLine();

int length = message.length();
int last = message.length()-1;

for (int i= length; i <= message.length(); i++){
	System.out.println( "Here are the characters, one at a time "  );
	System.out.println( i + " - " + message.charAt(0));
	

	for (   i=0; i<message.length(); i++ )
	{
		System.out.println("\t" + i + " - '" + message.charAt(i) + "'");
	}

	int a_count = 0;

	for (   i = 0; i<message.length(); i++ )
	{
		char letter = message.charAt(i);
		if ( letter == 'a' || letter == 'A' )
		{
			a_count++;
		}
	}

	System.out.println("\nYour message contains the letter 'a' " + a_count + " times. Isn't that interesting?");

}
}	
}


ADDING VALUES WITHIN A LOOP

// * Adding Values with a For Loop
	//
	// Write a program that gets an integer from the user.
	// Add up all the numbers from 1 to that number, and display the total.
	// Use a for loop to do it.

	public static void main(String[] args) {
		Scanner keyboard = new Scanner(System.in);
		int sum=0;
		int i=0;

		System.out.println("Input a nummber "  );

		int number = keyboard.nextInt();
		
		for (  i= 0; i <= number; i++) {
			
		 System.out.print( i );
		 
		 
		 sum = sum + i;
		}

		System.out.println(" the sum is " + sum);
	}
}

// * Baby Blackjack
	//
	// Write a program that allows a human user to play a single hand of "blackjack" against a dealer.

//Pick two values from 1-10 for the player. These are the player's "cards".
///Pick two more values from 1-10 for the dealer.
//Whoever has the highest total is the winner.
//There is no betting, no busting, and no hitting. Save that for real blackjack.
	//Baby Blackjack!

	//You drew 6 and 5.
	//Your total is 11.

	//The dealer has 7 and 3.
	//Dealer's total is 10.

	//YOU WIN!

	public static void main(String[] args) {
		Scanner keyboard = new Scanner(System.in);
		
		
		int sum=0;
		int i=0;

		System.out.println("Draw first card "  );

		int number1 = keyboard.nextInt();
		System.out.println("Draw second card "  );
         int number2 = keyboard.nextInt();
         int sum1 = number1+number2;
         System.out.println( " your total  is " + sum1 );
         
         int number3 = (int) (Math.random()*10);
         System.out.println(" dealer first card is " + number3);
         int number4 = (int) (Math.random()*10);
         System.out.println("dealer second card is "  + number4);
         int sum2 = number3+number4;
		System.out.println( " dealer total  is " + sum2 );
		if (sum1 > sum2) {
			System.out.println("you win" );
		} else if (sum1<sum2) {
			System.out.println("dealer wins" );
		}
		
		}

		
	}

    	